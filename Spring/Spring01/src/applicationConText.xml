<?xml version="1.0" encoding="UTF-8"?>
<!--default-lazy-init="true" 延迟加载-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       				 http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="annotation.xml"/>

    <!--    setter注入-->
    <bean id="user" class="com.review.bean.User">
        <property name="name" value="username"/>
        <!--设置null值 <property name="name"><null/></property>-->
    </bean>

    <!--	构造器注入-->

    <!--	构造函数参数索引-->
    <bean id="exampleBean1" class="com.review.bean.ExampleBean">
        <constructor-arg index="0" value="7500000"/>
        <constructor-arg index="1" value="ParameterIndex"/>
    </bean>

    <!--	.构造函数参数类型匹配-->
    <bean id="exampleBean2" class="com.review.bean.ExampleBean">
        <constructor-arg type="int" value="7500000"/>
        <constructor-arg type="java.lang.String" value="ParameterType"/>
    </bean>
    <!--	构造函数参数名称-->
    <bean id="exampleBean3" class="com.review.bean.ExampleBean">
        <constructor-arg name="years" value="7500000"/>
        <constructor-arg name="ultimateAnswer" value="ParameterName"/>
    </bean>

    <!--bean属性值 集合list map properties 类型-->
    <bean id="complex" class="com.review.bean.ComplexObject">
        <property name="someList">
            <list>
                <value>list1</value>
                <value>list2</value>
                <!--<ref bean="exampleBean1"/>-->
            </list>
        </property>
        <property name="map">
            <map>
                <entry key="key1" value="value1"/>
                <entry key="key2" value="value2"/>
                <!-- <entry key ="a ref" value-ref="exampleBean2"/>-->
            </map>
            <!--<map>
                <entry>
                <key>
                    <value>key01</value>
                </key>
                <ref bean="exampleBean3"/>
                </entry>
            </map>-->
        </property>

        <property name="pros">
            <props>
                <prop key="username">root</prop>
                <prop key="pwd">root</prop>
                <prop key="url">jdbc:mysql:///test</prop>
            </props>
        </property>

        <property name="set">
            <set>
                <value>set1</value>
                <value>set2</value>
                <!--<ref bean="exampleBean1"/>-->
            </set>
        </property>
    </bean>

    <!--    p 名称空间-->
    <bean id="user2" class="com.review.bean.User"
          p:name="pnamesapce"/>
    <!--p:name-ref="" name表示属性的名字（例如id，age）该-ref部分表示这不是直接值，而是对另一个bean的引用-->

    <!--c名称空间，构造器-->
    <bean id="exampleBean4" class="com.review.bean.ExampleBean"
          c:_0="18"
          c:_1="cnamespace"/>

<!--    SqEl表达式-->
    <bean id="user3" class="com.review.bean.User">
        <property name="name" value="#{'SpelDemo'}"/>
    </bean>


<!--    级联属性-->

    <bean id="car" class="com.review.bean.Car">
        <constructor-arg index="0" value="32000" />
        <constructor-arg index="1" value="大众"/>
        <constructor-arg index="2" value="北京"/>
    </bean>

    <bean id="person" class="com.review.bean.Person">
        <constructor-arg type="java.lang.String" value="Tom"></constructor-arg>
        <constructor-arg type="int" value="11"></constructor-arg>
        <constructor-arg name="car" ref="car" ></constructor-arg>
        <property name="car.price" value="123456"></property>
        <property name="car.name" value="级联属性"></property>
    </bean>
</beans>